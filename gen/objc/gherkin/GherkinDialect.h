//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/GherkinDialect.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinGherkinDialect")
#ifdef RESTRICT_GherkinGherkinDialect
#define INCLUDE_ALL_GherkinGherkinDialect 0
#else
#define INCLUDE_ALL_GherkinGherkinDialect 1
#endif
#undef RESTRICT_GherkinGherkinDialect

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKGherkinDialect_) && (INCLUDE_ALL_GherkinGherkinDialect || defined(INCLUDE_GHKGherkinDialect))
#define GHKGherkinDialect_

@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface GHKGherkinDialect : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)language
                           withJavaUtilMap:(id<JavaUtilMap>)keywords;

- (id<JavaUtilList>)getAndKeywords;

- (id<JavaUtilList>)getBackgroundKeywords;

- (id<JavaUtilList>)getButKeywords;

- (id<JavaUtilList>)getExamplesKeywords;

- (id<JavaUtilList>)getFeatureKeywords;

- (id<JavaUtilList>)getGivenKeywords;

- (NSString *)getLanguage;

- (id<JavaUtilList>)getScenarioKeywords;

- (id<JavaUtilList>)getScenarioOutlineKeywords;

- (id<JavaUtilList>)getStepKeywords;

- (id<JavaUtilList>)getThenKeywords;

- (id<JavaUtilList>)getWhenKeywords;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKGherkinDialect)

FOUNDATION_EXPORT void GHKGherkinDialect_initWithNSString_withJavaUtilMap_(GHKGherkinDialect *self, NSString *language, id<JavaUtilMap> keywords);

FOUNDATION_EXPORT GHKGherkinDialect *new_GHKGherkinDialect_initWithNSString_withJavaUtilMap_(NSString *language, id<JavaUtilMap> keywords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKGherkinDialect *create_GHKGherkinDialect_initWithNSString_withJavaUtilMap_(NSString *language, id<JavaUtilMap> keywords);

J2OBJC_TYPE_LITERAL_HEADER(GHKGherkinDialect)

@compatibility_alias GherkinGherkinDialect GHKGherkinDialect;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinGherkinDialect")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/events/AttachmentEvent.java
//

#include "J2ObjC_source.h"
#include "gherkin/events/AttachmentEvent.h"

@interface GHKAttachmentEvent () {
 @public
  NSString *type_;
  GHKAttachmentEvent_SourceRef *source_;
  NSString *data_;
  GHKAttachmentEvent_Media *media_;
}

@end

J2OBJC_FIELD_SETTER(GHKAttachmentEvent, type_, NSString *)
J2OBJC_FIELD_SETTER(GHKAttachmentEvent, source_, GHKAttachmentEvent_SourceRef *)
J2OBJC_FIELD_SETTER(GHKAttachmentEvent, data_, NSString *)
J2OBJC_FIELD_SETTER(GHKAttachmentEvent, media_, GHKAttachmentEvent_Media *)

@interface GHKAttachmentEvent_SourceRef () {
 @public
  NSString *uri_;
  GHKAttachmentEvent_Location *start_;
}

@end

J2OBJC_FIELD_SETTER(GHKAttachmentEvent_SourceRef, uri_, NSString *)
J2OBJC_FIELD_SETTER(GHKAttachmentEvent_SourceRef, start_, GHKAttachmentEvent_Location *)

@interface GHKAttachmentEvent_Location () {
 @public
  jint line_;
  jint column_;
}

@end

@interface GHKAttachmentEvent_Media () {
 @public
  NSString *encoding_;
  NSString *type_;
}

@end

J2OBJC_FIELD_SETTER(GHKAttachmentEvent_Media, encoding_, NSString *)
J2OBJC_FIELD_SETTER(GHKAttachmentEvent_Media, type_, NSString *)

@implementation GHKAttachmentEvent

- (instancetype __nonnull)initWithGHKAttachmentEvent_SourceRef:(GHKAttachmentEvent_SourceRef *)source
                                                  withNSString:(NSString *)data {
  GHKAttachmentEvent_initWithGHKAttachmentEvent_SourceRef_withNSString_(self, source, data);
  return self;
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(source_);
  RELEASE_(data_);
  RELEASE_(media_);
  [super dealloc];
}

@end

void GHKAttachmentEvent_initWithGHKAttachmentEvent_SourceRef_withNSString_(GHKAttachmentEvent *self, GHKAttachmentEvent_SourceRef *source, NSString *data) {
  NSObject_init(self);
  JreStrongAssign(&self->type_, @"attachment");
  JreStrongAssignAndConsume(&self->media_, new_GHKAttachmentEvent_Media_init());
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->data_, data);
}

GHKAttachmentEvent *new_GHKAttachmentEvent_initWithGHKAttachmentEvent_SourceRef_withNSString_(GHKAttachmentEvent_SourceRef *source, NSString *data) {
  J2OBJC_NEW_IMPL(GHKAttachmentEvent, initWithGHKAttachmentEvent_SourceRef_withNSString_, source, data)
}

GHKAttachmentEvent *create_GHKAttachmentEvent_initWithGHKAttachmentEvent_SourceRef_withNSString_(GHKAttachmentEvent_SourceRef *source, NSString *data) {
  J2OBJC_CREATE_IMPL(GHKAttachmentEvent, initWithGHKAttachmentEvent_SourceRef_withNSString_, source, data)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKAttachmentEvent)

@implementation GHKAttachmentEvent_SourceRef

- (instancetype __nonnull)initWithNSString:(NSString *)uri
           withGHKAttachmentEvent_Location:(GHKAttachmentEvent_Location *)start {
  GHKAttachmentEvent_SourceRef_initWithNSString_withGHKAttachmentEvent_Location_(self, uri, start);
  return self;
}

- (void)dealloc {
  RELEASE_(uri_);
  RELEASE_(start_);
  [super dealloc];
}

@end

void GHKAttachmentEvent_SourceRef_initWithNSString_withGHKAttachmentEvent_Location_(GHKAttachmentEvent_SourceRef *self, NSString *uri, GHKAttachmentEvent_Location *start) {
  NSObject_init(self);
  JreStrongAssign(&self->uri_, uri);
  JreStrongAssign(&self->start_, start);
}

GHKAttachmentEvent_SourceRef *new_GHKAttachmentEvent_SourceRef_initWithNSString_withGHKAttachmentEvent_Location_(NSString *uri, GHKAttachmentEvent_Location *start) {
  J2OBJC_NEW_IMPL(GHKAttachmentEvent_SourceRef, initWithNSString_withGHKAttachmentEvent_Location_, uri, start)
}

GHKAttachmentEvent_SourceRef *create_GHKAttachmentEvent_SourceRef_initWithNSString_withGHKAttachmentEvent_Location_(NSString *uri, GHKAttachmentEvent_Location *start) {
  J2OBJC_CREATE_IMPL(GHKAttachmentEvent_SourceRef, initWithNSString_withGHKAttachmentEvent_Location_, uri, start)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKAttachmentEvent_SourceRef)

@implementation GHKAttachmentEvent_Location

- (instancetype __nonnull)initWithInt:(jint)line
                              withInt:(jint)column {
  GHKAttachmentEvent_Location_initWithInt_withInt_(self, line, column);
  return self;
}

@end

void GHKAttachmentEvent_Location_initWithInt_withInt_(GHKAttachmentEvent_Location *self, jint line, jint column) {
  NSObject_init(self);
  self->line_ = line;
  self->column_ = column;
}

GHKAttachmentEvent_Location *new_GHKAttachmentEvent_Location_initWithInt_withInt_(jint line, jint column) {
  J2OBJC_NEW_IMPL(GHKAttachmentEvent_Location, initWithInt_withInt_, line, column)
}

GHKAttachmentEvent_Location *create_GHKAttachmentEvent_Location_initWithInt_withInt_(jint line, jint column) {
  J2OBJC_CREATE_IMPL(GHKAttachmentEvent_Location, initWithInt_withInt_, line, column)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKAttachmentEvent_Location)

@implementation GHKAttachmentEvent_Media

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  GHKAttachmentEvent_Media_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(encoding_);
  RELEASE_(type_);
  [super dealloc];
}

@end

void GHKAttachmentEvent_Media_init(GHKAttachmentEvent_Media *self) {
  NSObject_init(self);
  JreStrongAssign(&self->encoding_, @"utf-8");
  JreStrongAssign(&self->type_, @"text/x.cucumber.stacktrace+plain");
}

GHKAttachmentEvent_Media *new_GHKAttachmentEvent_Media_init() {
  J2OBJC_NEW_IMPL(GHKAttachmentEvent_Media, init)
}

GHKAttachmentEvent_Media *create_GHKAttachmentEvent_Media_init() {
  J2OBJC_CREATE_IMPL(GHKAttachmentEvent_Media, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKAttachmentEvent_Media)

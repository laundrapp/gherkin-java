//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gherkin/gherkin-java/src/main/java/gherkin/AstNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinAstNode")
#ifdef RESTRICT_GherkinAstNode
#define INCLUDE_ALL_GherkinAstNode 0
#else
#define INCLUDE_ALL_GherkinAstNode 1
#endif
#undef RESTRICT_GherkinAstNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GherkinAstNode_) && (INCLUDE_ALL_GherkinAstNode || defined(INCLUDE_GherkinAstNode))
#define GherkinAstNode_

@class GherkinParser_RuleType;
@class GherkinParser_TokenType;
@class GherkinToken;
@protocol JavaUtilList;

@interface GherkinAstNode : NSObject {
 @public
  GherkinParser_RuleType *ruleType_;
}

#pragma mark Public

- (instancetype __nonnull)initWithGherkinParser_RuleType:(GherkinParser_RuleType *)ruleType;

- (void)addWithGherkinParser_RuleType:(GherkinParser_RuleType *)ruleType
                               withId:(id)obj;

- (id<JavaUtilList>)getItemsWithGherkinParser_RuleType:(GherkinParser_RuleType *)ruleType;

- (id)getSingleWithGherkinParser_RuleType:(GherkinParser_RuleType *)ruleType
                                   withId:(id)defaultResult;

- (GherkinToken *)getTokenWithGherkinParser_TokenType:(GherkinParser_TokenType *)tokenType;

- (id<JavaUtilList>)getTokensWithGherkinParser_TokenType:(GherkinParser_TokenType *)tokenType;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinAstNode)

J2OBJC_FIELD_SETTER(GherkinAstNode, ruleType_, GherkinParser_RuleType *)

FOUNDATION_EXPORT void GherkinAstNode_initWithGherkinParser_RuleType_(GherkinAstNode *self, GherkinParser_RuleType *ruleType);

FOUNDATION_EXPORT GherkinAstNode *new_GherkinAstNode_initWithGherkinParser_RuleType_(GherkinParser_RuleType *ruleType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinAstNode *create_GherkinAstNode_initWithGherkinParser_RuleType_(GherkinParser_RuleType *ruleType);

J2OBJC_TYPE_LITERAL_HEADER(GherkinAstNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinAstNode")

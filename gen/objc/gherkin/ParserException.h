//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gherkin/gherkin-java/src/main/java/gherkin/ParserException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinParserException")
#ifdef RESTRICT_GherkinParserException
#define INCLUDE_ALL_GherkinParserException 0
#else
#define INCLUDE_ALL_GherkinParserException 1
#endif
#undef RESTRICT_GherkinParserException
#ifdef INCLUDE_GherkinParserException_CompositeParserException
#define INCLUDE_GherkinParserException 1
#endif
#ifdef INCLUDE_GherkinParserException_UnexpectedEOFException
#define INCLUDE_GherkinParserException 1
#endif
#ifdef INCLUDE_GherkinParserException_UnexpectedTokenException
#define INCLUDE_GherkinParserException 1
#endif
#ifdef INCLUDE_GherkinParserException_NoSuchLanguageException
#define INCLUDE_GherkinParserException 1
#endif
#ifdef INCLUDE_GherkinParserException_AstBuilderException
#define INCLUDE_GherkinParserException 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GherkinParserException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException))
#define GherkinParserException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class GherkinAstLocation;
@class JavaLangThrowable;

@interface GherkinParserException : JavaLangRuntimeException {
 @public
  GherkinAstLocation *location_;
}

#pragma mark Protected

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithNSString:(NSString *)message
                    withGherkinAstLocation:(GherkinAstLocation *)location;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException)

J2OBJC_FIELD_SETTER(GherkinParserException, location_, GherkinAstLocation *)

FOUNDATION_EXPORT void GherkinParserException_initWithNSString_(GherkinParserException *self, NSString *message);

FOUNDATION_EXPORT GherkinParserException *new_GherkinParserException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException *create_GherkinParserException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void GherkinParserException_initWithNSString_withGherkinAstLocation_(GherkinParserException *self, NSString *message, GherkinAstLocation *location);

FOUNDATION_EXPORT GherkinParserException *new_GherkinParserException_initWithNSString_withGherkinAstLocation_(NSString *message, GherkinAstLocation *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException *create_GherkinParserException_initWithNSString_withGherkinAstLocation_(NSString *message, GherkinAstLocation *location);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException)

#endif

#if !defined (GherkinParserException_AstBuilderException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException_AstBuilderException))
#define GherkinParserException_AstBuilderException_

@class GherkinAstLocation;

@interface GherkinParserException_AstBuilderException : GherkinParserException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message
                    withGherkinAstLocation:(GherkinAstLocation *)location;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException_AstBuilderException)

FOUNDATION_EXPORT void GherkinParserException_AstBuilderException_initWithNSString_withGherkinAstLocation_(GherkinParserException_AstBuilderException *self, NSString *message, GherkinAstLocation *location);

FOUNDATION_EXPORT GherkinParserException_AstBuilderException *new_GherkinParserException_AstBuilderException_initWithNSString_withGherkinAstLocation_(NSString *message, GherkinAstLocation *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException_AstBuilderException *create_GherkinParserException_AstBuilderException_initWithNSString_withGherkinAstLocation_(NSString *message, GherkinAstLocation *location);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException_AstBuilderException)

#endif

#if !defined (GherkinParserException_NoSuchLanguageException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException_NoSuchLanguageException))
#define GherkinParserException_NoSuchLanguageException_

@class GherkinAstLocation;

@interface GherkinParserException_NoSuchLanguageException : GherkinParserException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)language
                    withGherkinAstLocation:(GherkinAstLocation *)location;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException_NoSuchLanguageException)

FOUNDATION_EXPORT void GherkinParserException_NoSuchLanguageException_initWithNSString_withGherkinAstLocation_(GherkinParserException_NoSuchLanguageException *self, NSString *language, GherkinAstLocation *location);

FOUNDATION_EXPORT GherkinParserException_NoSuchLanguageException *new_GherkinParserException_NoSuchLanguageException_initWithNSString_withGherkinAstLocation_(NSString *language, GherkinAstLocation *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException_NoSuchLanguageException *create_GherkinParserException_NoSuchLanguageException_initWithNSString_withGherkinAstLocation_(NSString *language, GherkinAstLocation *location);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException_NoSuchLanguageException)

#endif

#if !defined (GherkinParserException_UnexpectedTokenException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException_UnexpectedTokenException))
#define GherkinParserException_UnexpectedTokenException_

@class GherkinAstLocation;
@class GherkinToken;
@protocol JavaUtilList;

@interface GherkinParserException_UnexpectedTokenException : GherkinParserException {
 @public
  NSString *stateComment_;
  GherkinToken *receivedToken_;
  id<JavaUtilList> expectedTokenTypes_;
}

#pragma mark Public

- (instancetype __nonnull)initWithGherkinToken:(GherkinToken *)receivedToken
                              withJavaUtilList:(id<JavaUtilList>)expectedTokenTypes
                                  withNSString:(NSString *)stateComment;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                    withGherkinAstLocation:(GherkinAstLocation *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException_UnexpectedTokenException)

J2OBJC_FIELD_SETTER(GherkinParserException_UnexpectedTokenException, stateComment_, NSString *)
J2OBJC_FIELD_SETTER(GherkinParserException_UnexpectedTokenException, receivedToken_, GherkinToken *)
J2OBJC_FIELD_SETTER(GherkinParserException_UnexpectedTokenException, expectedTokenTypes_, id<JavaUtilList>)

FOUNDATION_EXPORT void GherkinParserException_UnexpectedTokenException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinParserException_UnexpectedTokenException *self, GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment);

FOUNDATION_EXPORT GherkinParserException_UnexpectedTokenException *new_GherkinParserException_UnexpectedTokenException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException_UnexpectedTokenException *create_GherkinParserException_UnexpectedTokenException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException_UnexpectedTokenException)

#endif

#if !defined (GherkinParserException_UnexpectedEOFException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException_UnexpectedEOFException))
#define GherkinParserException_UnexpectedEOFException_

@class GherkinAstLocation;
@class GherkinToken;
@protocol JavaUtilList;

@interface GherkinParserException_UnexpectedEOFException : GherkinParserException {
 @public
  NSString *stateComment_;
  id<JavaUtilList> expectedTokenTypes_;
}

#pragma mark Public

- (instancetype __nonnull)initWithGherkinToken:(GherkinToken *)receivedToken
                              withJavaUtilList:(id<JavaUtilList>)expectedTokenTypes
                                  withNSString:(NSString *)stateComment;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                    withGherkinAstLocation:(GherkinAstLocation *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException_UnexpectedEOFException)

J2OBJC_FIELD_SETTER(GherkinParserException_UnexpectedEOFException, stateComment_, NSString *)
J2OBJC_FIELD_SETTER(GherkinParserException_UnexpectedEOFException, expectedTokenTypes_, id<JavaUtilList>)

FOUNDATION_EXPORT void GherkinParserException_UnexpectedEOFException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinParserException_UnexpectedEOFException *self, GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment);

FOUNDATION_EXPORT GherkinParserException_UnexpectedEOFException *new_GherkinParserException_UnexpectedEOFException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException_UnexpectedEOFException *create_GherkinParserException_UnexpectedEOFException_initWithGherkinToken_withJavaUtilList_withNSString_(GherkinToken *receivedToken, id<JavaUtilList> expectedTokenTypes, NSString *stateComment);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException_UnexpectedEOFException)

#endif

#if !defined (GherkinParserException_CompositeParserException_) && (INCLUDE_ALL_GherkinParserException || defined(INCLUDE_GherkinParserException_CompositeParserException))
#define GherkinParserException_CompositeParserException_

@class GherkinAstLocation;
@protocol JavaUtilList;

@interface GherkinParserException_CompositeParserException : GherkinParserException {
 @public
  id<JavaUtilList> errors_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)errors;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                    withGherkinAstLocation:(GherkinAstLocation *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GherkinParserException_CompositeParserException)

J2OBJC_FIELD_SETTER(GherkinParserException_CompositeParserException, errors_, id<JavaUtilList>)

FOUNDATION_EXPORT void GherkinParserException_CompositeParserException_initWithJavaUtilList_(GherkinParserException_CompositeParserException *self, id<JavaUtilList> errors);

FOUNDATION_EXPORT GherkinParserException_CompositeParserException *new_GherkinParserException_CompositeParserException_initWithJavaUtilList_(id<JavaUtilList> errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinParserException_CompositeParserException *create_GherkinParserException_CompositeParserException_initWithJavaUtilList_(id<JavaUtilList> errors);

J2OBJC_TYPE_LITERAL_HEADER(GherkinParserException_CompositeParserException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinParserException")

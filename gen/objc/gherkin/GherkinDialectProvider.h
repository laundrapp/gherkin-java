//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/GherkinDialectProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinGherkinDialectProvider")
#ifdef RESTRICT_GherkinGherkinDialectProvider
#define INCLUDE_ALL_GherkinGherkinDialectProvider 0
#else
#define INCLUDE_ALL_GherkinGherkinDialectProvider 1
#endif
#undef RESTRICT_GherkinGherkinDialectProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKGherkinDialectProvider_) && (INCLUDE_ALL_GherkinGherkinDialectProvider || defined(INCLUDE_GHKGherkinDialectProvider))
#define GHKGherkinDialectProvider_

#define RESTRICT_GherkinIGherkinDialectProvider 1
#define INCLUDE_GHKIGherkinDialectProvider 1
#include "gherkin/IGherkinDialectProvider.h"

@class GHKALocation;
@class GHKGherkinDialect;
@protocol JavaUtilList;

@interface GHKGherkinDialectProvider : NSObject < GHKIGherkinDialectProvider >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)default_dialect_name;

- (GHKGherkinDialect *)getDefaultDialect;

- (GHKGherkinDialect *)getDialectWithNSString:(NSString *)language
                             withGHKALocation:(GHKALocation *)location;

- (id<JavaUtilList>)getLanguages;

@end

J2OBJC_STATIC_INIT(GHKGherkinDialectProvider)

FOUNDATION_EXPORT void GHKGherkinDialectProvider_initWithNSString_(GHKGherkinDialectProvider *self, NSString *default_dialect_name);

FOUNDATION_EXPORT GHKGherkinDialectProvider *new_GHKGherkinDialectProvider_initWithNSString_(NSString *default_dialect_name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKGherkinDialectProvider *create_GHKGherkinDialectProvider_initWithNSString_(NSString *default_dialect_name);

FOUNDATION_EXPORT void GHKGherkinDialectProvider_init(GHKGherkinDialectProvider *self);

FOUNDATION_EXPORT GHKGherkinDialectProvider *new_GHKGherkinDialectProvider_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKGherkinDialectProvider *create_GHKGherkinDialectProvider_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GHKGherkinDialectProvider)

@compatibility_alias GherkinGherkinDialectProvider GHKGherkinDialectProvider;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinGherkinDialectProvider")

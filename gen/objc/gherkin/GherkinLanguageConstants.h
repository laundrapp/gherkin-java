//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/GherkinLanguageConstants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinGherkinLanguageConstants")
#ifdef RESTRICT_GherkinGherkinLanguageConstants
#define INCLUDE_ALL_GherkinGherkinLanguageConstants 0
#else
#define INCLUDE_ALL_GherkinGherkinLanguageConstants 1
#endif
#undef RESTRICT_GherkinGherkinLanguageConstants

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKGherkinLanguageConstants_) && (INCLUDE_ALL_GherkinGherkinLanguageConstants || defined(INCLUDE_GHKGherkinLanguageConstants))
#define GHKGherkinLanguageConstants_

@protocol GHKGherkinLanguageConstants < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(GHKGherkinLanguageConstants)

inline NSString *GHKGherkinLanguageConstants_get_TAG_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_TAG_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, TAG_PREFIX, NSString *)

inline NSString *GHKGherkinLanguageConstants_get_COMMENT_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_COMMENT_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, COMMENT_PREFIX, NSString *)

inline NSString *GHKGherkinLanguageConstants_get_TITLE_KEYWORD_SEPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_TITLE_KEYWORD_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, TITLE_KEYWORD_SEPARATOR, NSString *)

inline NSString *GHKGherkinLanguageConstants_get_TABLE_CELL_SEPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_TABLE_CELL_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, TABLE_CELL_SEPARATOR, NSString *)

inline NSString *GHKGherkinLanguageConstants_get_DOCSTRING_SEPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_DOCSTRING_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, DOCSTRING_SEPARATOR, NSString *)

inline NSString *GHKGherkinLanguageConstants_get_DOCSTRING_ALTERNATIVE_SEPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *GHKGherkinLanguageConstants_DOCSTRING_ALTERNATIVE_SEPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GHKGherkinLanguageConstants, DOCSTRING_ALTERNATIVE_SEPARATOR, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(GHKGherkinLanguageConstants)

#define GherkinGherkinLanguageConstants GHKGherkinLanguageConstants

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinGherkinLanguageConstants")

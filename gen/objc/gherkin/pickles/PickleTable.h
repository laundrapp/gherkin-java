//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/pickles/PickleTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinPicklesPickleTable")
#ifdef RESTRICT_GherkinPicklesPickleTable
#define INCLUDE_ALL_GherkinPicklesPickleTable 0
#else
#define INCLUDE_ALL_GherkinPicklesPickleTable 1
#endif
#undef RESTRICT_GherkinPicklesPickleTable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKPickleTable_) && (INCLUDE_ALL_GherkinPicklesPickleTable || defined(INCLUDE_GHKPickleTable))
#define GHKPickleTable_

#define RESTRICT_GherkinPicklesArgument 1
#define INCLUDE_GHKArgument 1
#include "gherkin/pickles/Argument.h"

@class GHKPickleLocation;
@protocol JavaUtilList;

@interface GHKPickleTable : NSObject < GHKArgument >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)rows;

- (GHKPickleLocation *)getLocation;

- (id<JavaUtilList>)getRows;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKPickleTable)

FOUNDATION_EXPORT void GHKPickleTable_initWithJavaUtilList_(GHKPickleTable *self, id<JavaUtilList> rows);

FOUNDATION_EXPORT GHKPickleTable *new_GHKPickleTable_initWithJavaUtilList_(id<JavaUtilList> rows) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKPickleTable *create_GHKPickleTable_initWithJavaUtilList_(id<JavaUtilList> rows);

J2OBJC_TYPE_LITERAL_HEADER(GHKPickleTable)

@compatibility_alias GherkinPicklesPickleTable GHKPickleTable;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinPicklesPickleTable")

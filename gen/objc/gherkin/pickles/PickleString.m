//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/pickles/PickleString.java
//

#include "J2ObjC_source.h"
#include "gherkin/pickles/PickleLocation.h"
#include "gherkin/pickles/PickleString.h"

@interface GHKPickleString () {
 @public
  GHKPickleLocation *location_;
  NSString *content_;
  NSString *contentType_;
}

@end

J2OBJC_FIELD_SETTER(GHKPickleString, location_, GHKPickleLocation *)
J2OBJC_FIELD_SETTER(GHKPickleString, content_, NSString *)
J2OBJC_FIELD_SETTER(GHKPickleString, contentType_, NSString *)

@implementation GHKPickleString

- (instancetype __nonnull)initWithGHKPickleLocation:(GHKPickleLocation *)location
                                       withNSString:(NSString *)content
                                       withNSString:(NSString *)contentType {
  GHKPickleString_initWithGHKPickleLocation_withNSString_withNSString_(self, location, content, contentType);
  return self;
}

- (instancetype __nonnull)initWithGHKPickleLocation:(GHKPickleLocation *)location
                                       withNSString:(NSString *)content {
  GHKPickleString_initWithGHKPickleLocation_withNSString_(self, location, content);
  return self;
}

- (GHKPickleLocation *)getLocation {
  return location_;
}

- (NSString *)getContent {
  return content_;
}

- (NSString *)getContentType {
  return contentType_;
}

- (void)dealloc {
  RELEASE_(location_);
  RELEASE_(content_);
  RELEASE_(contentType_);
  [super dealloc];
}

@end

void GHKPickleString_initWithGHKPickleLocation_withNSString_withNSString_(GHKPickleString *self, GHKPickleLocation *location, NSString *content, NSString *contentType) {
  NSObject_init(self);
  JreStrongAssign(&self->location_, location);
  JreStrongAssign(&self->content_, content);
  JreStrongAssign(&self->contentType_, contentType);
}

GHKPickleString *new_GHKPickleString_initWithGHKPickleLocation_withNSString_withNSString_(GHKPickleLocation *location, NSString *content, NSString *contentType) {
  J2OBJC_NEW_IMPL(GHKPickleString, initWithGHKPickleLocation_withNSString_withNSString_, location, content, contentType)
}

GHKPickleString *create_GHKPickleString_initWithGHKPickleLocation_withNSString_withNSString_(GHKPickleLocation *location, NSString *content, NSString *contentType) {
  J2OBJC_CREATE_IMPL(GHKPickleString, initWithGHKPickleLocation_withNSString_withNSString_, location, content, contentType)
}

void GHKPickleString_initWithGHKPickleLocation_withNSString_(GHKPickleString *self, GHKPickleLocation *location, NSString *content) {
  GHKPickleString_initWithGHKPickleLocation_withNSString_withNSString_(self, location, content, nil);
}

GHKPickleString *new_GHKPickleString_initWithGHKPickleLocation_withNSString_(GHKPickleLocation *location, NSString *content) {
  J2OBJC_NEW_IMPL(GHKPickleString, initWithGHKPickleLocation_withNSString_, location, content)
}

GHKPickleString *create_GHKPickleString_initWithGHKPickleLocation_withNSString_(GHKPickleLocation *location, NSString *content) {
  J2OBJC_CREATE_IMPL(GHKPickleString, initWithGHKPickleLocation_withNSString_, location, content)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKPickleString)

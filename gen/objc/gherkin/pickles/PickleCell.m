//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/pickles/PickleCell.java
//

#include "J2ObjC_source.h"
#include "gherkin/pickles/PickleCell.h"
#include "gherkin/pickles/PickleLocation.h"

@interface GHKPickleCell () {
 @public
  GHKPickleLocation *location_;
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(GHKPickleCell, location_, GHKPickleLocation *)
J2OBJC_FIELD_SETTER(GHKPickleCell, value_, NSString *)

@implementation GHKPickleCell

- (instancetype __nonnull)initWithGHKPickleLocation:(GHKPickleLocation *)location
                                       withNSString:(NSString *)value {
  GHKPickleCell_initWithGHKPickleLocation_withNSString_(self, location, value);
  return self;
}

- (NSString *)getValue {
  return value_;
}

- (GHKPickleLocation *)getLocation {
  return location_;
}

- (void)dealloc {
  RELEASE_(location_);
  RELEASE_(value_);
  [super dealloc];
}

@end

void GHKPickleCell_initWithGHKPickleLocation_withNSString_(GHKPickleCell *self, GHKPickleLocation *location, NSString *value) {
  NSObject_init(self);
  JreStrongAssign(&self->location_, location);
  JreStrongAssign(&self->value_, value);
}

GHKPickleCell *new_GHKPickleCell_initWithGHKPickleLocation_withNSString_(GHKPickleLocation *location, NSString *value) {
  J2OBJC_NEW_IMPL(GHKPickleCell, initWithGHKPickleLocation_withNSString_, location, value)
}

GHKPickleCell *create_GHKPickleCell_initWithGHKPickleLocation_withNSString_(GHKPickleLocation *location, NSString *value) {
  J2OBJC_CREATE_IMPL(GHKPickleCell, initWithGHKPickleLocation_withNSString_, location, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKPickleCell)

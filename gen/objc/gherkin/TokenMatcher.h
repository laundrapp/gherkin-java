//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/laundrapp_org/gherkin-java/src/main/java/gherkin/TokenMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinTokenMatcher")
#ifdef RESTRICT_GherkinTokenMatcher
#define INCLUDE_ALL_GherkinTokenMatcher 0
#else
#define INCLUDE_ALL_GherkinTokenMatcher 1
#endif
#undef RESTRICT_GherkinTokenMatcher

#if !defined (GherkinTokenMatcher_) && (INCLUDE_ALL_GherkinTokenMatcher || defined(INCLUDE_GherkinTokenMatcher))
#define GherkinTokenMatcher_

#define RESTRICT_GherkinParser 1
#define INCLUDE_GherkinParser_ITokenMatcher 1
#include "gherkin/Parser.h"

@class GherkinGherkinDialect;
@class GherkinParser_TokenType;
@class GherkinToken;
@class JavaLangInteger;
@protocol GherkinIGherkinDialectProvider;
@protocol JavaUtilList;

@interface GherkinTokenMatcher : NSObject < GherkinParser_ITokenMatcher >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithGherkinIGherkinDialectProvider:(id<GherkinIGherkinDialectProvider>)dialectProvider;

- (instancetype)initWithNSString:(NSString *)defaultDialectName;

- (GherkinGherkinDialect *)getCurrentDialect;

- (jboolean)match_BackgroundLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_CommentWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_DocStringSeparatorWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_EmptyWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_EOFWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_ExamplesLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_FeatureLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_LanguageWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_OtherWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_ScenarioLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_ScenarioOutlineLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_StepLineWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_TableRowWithGherkinToken:(GherkinToken *)token;

- (jboolean)match_TagLineWithGherkinToken:(GherkinToken *)token;

- (void)reset;

#pragma mark Protected

- (void)setTokenMatchedWithGherkinToken:(GherkinToken *)token
            withGherkinParser_TokenType:(GherkinParser_TokenType *)matchedType
                           withNSString:(NSString *)text
                           withNSString:(NSString *)keyword
                    withJavaLangInteger:(JavaLangInteger *)indent
                       withJavaUtilList:(id<JavaUtilList>)items;

@end

J2OBJC_STATIC_INIT(GherkinTokenMatcher)

FOUNDATION_EXPORT void GherkinTokenMatcher_initWithGherkinIGherkinDialectProvider_(GherkinTokenMatcher *self, id<GherkinIGherkinDialectProvider> dialectProvider);

FOUNDATION_EXPORT GherkinTokenMatcher *new_GherkinTokenMatcher_initWithGherkinIGherkinDialectProvider_(id<GherkinIGherkinDialectProvider> dialectProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinTokenMatcher *create_GherkinTokenMatcher_initWithGherkinIGherkinDialectProvider_(id<GherkinIGherkinDialectProvider> dialectProvider);

FOUNDATION_EXPORT void GherkinTokenMatcher_init(GherkinTokenMatcher *self);

FOUNDATION_EXPORT GherkinTokenMatcher *new_GherkinTokenMatcher_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinTokenMatcher *create_GherkinTokenMatcher_init(void);

FOUNDATION_EXPORT void GherkinTokenMatcher_initWithNSString_(GherkinTokenMatcher *self, NSString *defaultDialectName);

FOUNDATION_EXPORT GherkinTokenMatcher *new_GherkinTokenMatcher_initWithNSString_(NSString *defaultDialectName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GherkinTokenMatcher *create_GherkinTokenMatcher_initWithNSString_(NSString *defaultDialectName);

J2OBJC_TYPE_LITERAL_HEADER(GherkinTokenMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_GherkinTokenMatcher")

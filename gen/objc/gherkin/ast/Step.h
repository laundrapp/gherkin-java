//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/ast/Step.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinAstStep")
#ifdef RESTRICT_GherkinAstStep
#define INCLUDE_ALL_GherkinAstStep 0
#else
#define INCLUDE_ALL_GherkinAstStep 1
#endif
#undef RESTRICT_GherkinAstStep

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKAStep_) && (INCLUDE_ALL_GherkinAstStep || defined(INCLUDE_GHKAStep))
#define GHKAStep_

#define RESTRICT_GherkinAstAbstractNode 1
#define INCLUDE_GHKAAbstractNode 1
#include "gherkin/ast/AbstractNode.h"

@class GHKALocation;

@interface GHKAStep : GHKAAbstractNode

#pragma mark Public

- (instancetype __nonnull)initWithGHKALocation:(GHKALocation *)location
                                  withNSString:(NSString *)keyword
                                  withNSString:(NSString *)text
                          withGHKAAbstractNode:(GHKAAbstractNode *)argument;

- (GHKAAbstractNode *)getArgument;

- (NSString *)getKeyword;

- (NSString *)getText;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithGHKALocation:(GHKALocation *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKAStep)

FOUNDATION_EXPORT void GHKAStep_initWithGHKALocation_withNSString_withNSString_withGHKAAbstractNode_(GHKAStep *self, GHKALocation *location, NSString *keyword, NSString *text, GHKAAbstractNode *argument);

FOUNDATION_EXPORT GHKAStep *new_GHKAStep_initWithGHKALocation_withNSString_withNSString_withGHKAAbstractNode_(GHKALocation *location, NSString *keyword, NSString *text, GHKAAbstractNode *argument) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKAStep *create_GHKAStep_initWithGHKALocation_withNSString_withNSString_withGHKAAbstractNode_(GHKALocation *location, NSString *keyword, NSString *text, GHKAAbstractNode *argument);

J2OBJC_TYPE_LITERAL_HEADER(GHKAStep)

@compatibility_alias GherkinAstStep GHKAStep;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinAstStep")

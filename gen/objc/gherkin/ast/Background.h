//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/ast/Background.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinAstBackground")
#ifdef RESTRICT_GherkinAstBackground
#define INCLUDE_ALL_GherkinAstBackground 0
#else
#define INCLUDE_ALL_GherkinAstBackground 1
#endif
#undef RESTRICT_GherkinAstBackground

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKABackground_) && (INCLUDE_ALL_GherkinAstBackground || defined(INCLUDE_GHKABackground))
#define GHKABackground_

#define RESTRICT_GherkinAstScenarioDefinition 1
#define INCLUDE_GHKAScenarioDefinition 1
#include "gherkin/ast/ScenarioDefinition.h"

@class GHKALocation;
@protocol JavaUtilList;

@interface GHKABackground : GHKAScenarioDefinition

#pragma mark Public

- (instancetype __nonnull)initWithGHKALocation:(GHKALocation *)location
                                  withNSString:(NSString *)keyword
                                  withNSString:(NSString *)name
                                  withNSString:(NSString *)description_
                              withJavaUtilList:(id<JavaUtilList>)steps;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKABackground)

FOUNDATION_EXPORT void GHKABackground_initWithGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_(GHKABackground *self, GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps);

FOUNDATION_EXPORT GHKABackground *new_GHKABackground_initWithGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_(GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKABackground *create_GHKABackground_initWithGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_(GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps);

J2OBJC_TYPE_LITERAL_HEADER(GHKABackground)

@compatibility_alias GherkinAstBackground GHKABackground;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinAstBackground")

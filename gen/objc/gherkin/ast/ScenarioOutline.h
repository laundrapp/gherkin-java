//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/ast/ScenarioOutline.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinAstScenarioOutline")
#ifdef RESTRICT_GherkinAstScenarioOutline
#define INCLUDE_ALL_GherkinAstScenarioOutline 0
#else
#define INCLUDE_ALL_GherkinAstScenarioOutline 1
#endif
#undef RESTRICT_GherkinAstScenarioOutline

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKAScenarioOutline_) && (INCLUDE_ALL_GherkinAstScenarioOutline || defined(INCLUDE_GHKAScenarioOutline))
#define GHKAScenarioOutline_

#define RESTRICT_GherkinAstScenarioDefinition 1
#define INCLUDE_GHKAScenarioDefinition 1
#include "gherkin/ast/ScenarioDefinition.h"

@class GHKALocation;
@protocol JavaUtilList;

@interface GHKAScenarioOutline : GHKAScenarioDefinition

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)tags
                              withGHKALocation:(GHKALocation *)location
                                  withNSString:(NSString *)keyword
                                  withNSString:(NSString *)name
                                  withNSString:(NSString *)description_
                              withJavaUtilList:(id<JavaUtilList>)steps
                              withJavaUtilList:(id<JavaUtilList>)examples;

- (id<JavaUtilList>)getExamples;

- (id<JavaUtilList>)getTags;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithGHKALocation:(GHKALocation *)arg0
                                  withNSString:(NSString *)arg1
                                  withNSString:(NSString *)arg2
                                  withNSString:(NSString *)arg3
                              withJavaUtilList:(id<JavaUtilList>)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKAScenarioOutline)

FOUNDATION_EXPORT void GHKAScenarioOutline_initWithJavaUtilList_withGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(GHKAScenarioOutline *self, id<JavaUtilList> tags, GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps, id<JavaUtilList> examples);

FOUNDATION_EXPORT GHKAScenarioOutline *new_GHKAScenarioOutline_initWithJavaUtilList_withGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(id<JavaUtilList> tags, GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps, id<JavaUtilList> examples) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKAScenarioOutline *create_GHKAScenarioOutline_initWithJavaUtilList_withGHKALocation_withNSString_withNSString_withNSString_withJavaUtilList_withJavaUtilList_(id<JavaUtilList> tags, GHKALocation *location, NSString *keyword, NSString *name, NSString *description_, id<JavaUtilList> steps, id<JavaUtilList> examples);

J2OBJC_TYPE_LITERAL_HEADER(GHKAScenarioOutline)

@compatibility_alias GherkinAstScenarioOutline GHKAScenarioOutline;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinAstScenarioOutline")

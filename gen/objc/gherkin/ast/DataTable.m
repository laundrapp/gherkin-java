//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gherkin/gherkin-java/src/main/java/gherkin/ast/DataTable.java
//

#include "J2ObjC_source.h"
#include "gherkin/ast/DataTable.h"
#include "gherkin/ast/Location.h"
#include "gherkin/ast/Node.h"
#include "gherkin/ast/TableRow.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface GherkinAstDataTable () {
 @public
  id<JavaUtilList> rows_;
}

@end

J2OBJC_FIELD_SETTER(GherkinAstDataTable, rows_, id<JavaUtilList>)

@implementation GherkinAstDataTable

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)rows {
  GherkinAstDataTable_initWithJavaUtilList_(self, rows);
  return self;
}

- (id<JavaUtilList>)getRows {
  return rows_;
}

- (void)dealloc {
  RELEASE_(rows_);
  [super dealloc];
}

@end

void GherkinAstDataTable_initWithJavaUtilList_(GherkinAstDataTable *self, id<JavaUtilList> rows) {
  GherkinAstNode_initWithGherkinAstLocation_(self, [((GherkinAstTableRow *) nil_chk([((id<JavaUtilList>) nil_chk(rows)) getWithInt:0])) getLocation]);
  JreStrongAssign(&self->rows_, JavaUtilCollections_unmodifiableListWithJavaUtilList_(rows));
}

GherkinAstDataTable *new_GherkinAstDataTable_initWithJavaUtilList_(id<JavaUtilList> rows) {
  J2OBJC_NEW_IMPL(GherkinAstDataTable, initWithJavaUtilList_, rows)
}

GherkinAstDataTable *create_GherkinAstDataTable_initWithJavaUtilList_(id<JavaUtilList> rows) {
  J2OBJC_CREATE_IMPL(GherkinAstDataTable, initWithJavaUtilList_, rows)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GherkinAstDataTable)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/ast/DataTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinAstDataTable")
#ifdef RESTRICT_GherkinAstDataTable
#define INCLUDE_ALL_GherkinAstDataTable 0
#else
#define INCLUDE_ALL_GherkinAstDataTable 1
#endif
#undef RESTRICT_GherkinAstDataTable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKADataTable_) && (INCLUDE_ALL_GherkinAstDataTable || defined(INCLUDE_GHKADataTable))
#define GHKADataTable_

#define RESTRICT_GherkinAstNode 1
#define INCLUDE_GHKANode 1
#include "gherkin/ast/Node.h"

@class GHKALocation;
@protocol JavaUtilList;

@interface GHKADataTable : GHKANode

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)rows;

- (id<JavaUtilList>)getRows;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithGHKALocation:(GHKALocation *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKADataTable)

FOUNDATION_EXPORT void GHKADataTable_initWithJavaUtilList_(GHKADataTable *self, id<JavaUtilList> rows);

FOUNDATION_EXPORT GHKADataTable *new_GHKADataTable_initWithJavaUtilList_(id<JavaUtilList> rows) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKADataTable *create_GHKADataTable_initWithJavaUtilList_(id<JavaUtilList> rows);

J2OBJC_TYPE_LITERAL_HEADER(GHKADataTable)

@compatibility_alias GherkinAstDataTable GHKADataTable;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinAstDataTable")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/Token.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GherkinToken")
#ifdef RESTRICT_GherkinToken
#define INCLUDE_ALL_GherkinToken 0
#else
#define INCLUDE_ALL_GherkinToken 1
#endif
#undef RESTRICT_GherkinToken

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (GHKToken_) && (INCLUDE_ALL_GherkinToken || defined(INCLUDE_GHKToken))
#define GHKToken_

@class GHKALocation;
@class GHKGherkinDialect;
@class GHKParser_TokenType;
@protocol GHKIGherkinLine;
@protocol JavaUtilList;

@interface GHKToken : NSObject {
 @public
  id<GHKIGherkinLine> line_;
  GHKParser_TokenType *matchedType_;
  NSString *matchedKeyword_;
  NSString *matchedText_;
  id<JavaUtilList> mathcedItems_;
  jint matchedIndent_;
  GHKGherkinDialect *matchedGherkinDialect_;
  GHKALocation *location_;
}

#pragma mark Public

- (instancetype __nonnull)initWithGHKIGherkinLine:(id<GHKIGherkinLine>)line
                                 withGHKALocation:(GHKALocation *)location;

- (void)detach;

- (NSString *)getTokenValue;

- (jboolean)isEOF;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKToken)

J2OBJC_FIELD_SETTER(GHKToken, line_, id<GHKIGherkinLine>)
J2OBJC_FIELD_SETTER(GHKToken, matchedType_, GHKParser_TokenType *)
J2OBJC_FIELD_SETTER(GHKToken, matchedKeyword_, NSString *)
J2OBJC_FIELD_SETTER(GHKToken, matchedText_, NSString *)
J2OBJC_FIELD_SETTER(GHKToken, mathcedItems_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(GHKToken, matchedGherkinDialect_, GHKGherkinDialect *)
J2OBJC_FIELD_SETTER(GHKToken, location_, GHKALocation *)

FOUNDATION_EXPORT void GHKToken_initWithGHKIGherkinLine_withGHKALocation_(GHKToken *self, id<GHKIGherkinLine> line, GHKALocation *location);

FOUNDATION_EXPORT GHKToken *new_GHKToken_initWithGHKIGherkinLine_withGHKALocation_(id<GHKIGherkinLine> line, GHKALocation *location) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GHKToken *create_GHKToken_initWithGHKIGherkinLine_withGHKALocation_(id<GHKIGherkinLine> line, GHKALocation *location);

J2OBJC_TYPE_LITERAL_HEADER(GHKToken)

@compatibility_alias GherkinToken GHKToken;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_GherkinToken")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/StringUtils.java
//

#include "J2ObjC_source.h"
#include "gherkin/StringUtils.h"
#include "java/lang/Character.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/util/List.h"

@interface GHKStringUtils_ToString_1 : NSObject < GHKStringUtils_ToString >

- (NSString *)toStringWithId:(NSString *)o;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKStringUtils_ToString_1)

__attribute__((unused)) static void GHKStringUtils_ToString_1_init(GHKStringUtils_ToString_1 *self);

__attribute__((unused)) static GHKStringUtils_ToString_1 *new_GHKStringUtils_ToString_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKStringUtils_ToString_1 *create_GHKStringUtils_ToString_1_init(void);

@implementation GHKStringUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  GHKStringUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)joinWithNSString:(NSString *)separator
              withJavaUtilList:(id<JavaUtilList>)items {
  return GHKStringUtils_joinWithNSString_withJavaUtilList_(separator, items);
}

+ (NSString *)joinWithGHKStringUtils_ToString:(id<GHKStringUtils_ToString>)toString
                                 withNSString:(NSString *)separator
                         withJavaLangIterable:(id<JavaLangIterable>)items {
  return GHKStringUtils_joinWithGHKStringUtils_ToString_withNSString_withJavaLangIterable_(toString, separator, items);
}

+ (NSString *)ltrimWithNSString:(NSString *)s {
  return GHKStringUtils_ltrimWithNSString_(s);
}

@end

void GHKStringUtils_init(GHKStringUtils *self) {
  NSObject_init(self);
}

GHKStringUtils *new_GHKStringUtils_init() {
  J2OBJC_NEW_IMPL(GHKStringUtils, init)
}

GHKStringUtils *create_GHKStringUtils_init() {
  J2OBJC_CREATE_IMPL(GHKStringUtils, init)
}

NSString *GHKStringUtils_joinWithNSString_withJavaUtilList_(NSString *separator, id<JavaUtilList> items) {
  GHKStringUtils_initialize();
  return GHKStringUtils_joinWithGHKStringUtils_ToString_withNSString_withJavaLangIterable_(JreLoadStatic(GHKStringUtils_ToString, DEFAULT), separator, items);
}

NSString *GHKStringUtils_joinWithGHKStringUtils_ToString_withNSString_withJavaLangIterable_(id<GHKStringUtils_ToString> toString, NSString *separator, id<JavaLangIterable> items) {
  GHKStringUtils_initialize();
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  jboolean useSeparator = false;
  for (id __strong item in nil_chk(items)) {
    if (useSeparator) [sb appendWithNSString:separator];
    useSeparator = true;
    [sb appendWithNSString:[((id<GHKStringUtils_ToString>) nil_chk(toString)) toStringWithId:item]];
  }
  return [sb description];
}

NSString *GHKStringUtils_ltrimWithNSString_(NSString *s) {
  GHKStringUtils_initialize();
  jint i = 0;
  while (i < [((NSString *) nil_chk(s)) java_length] && JavaLangCharacter_isWhitespaceWithChar_([s charAtWithInt:i])) {
    i++;
  }
  return [s java_substring:i];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKStringUtils)

J2OBJC_INITIALIZED_DEFN(GHKStringUtils_ToString)

id<GHKStringUtils_ToString> GHKStringUtils_ToString_DEFAULT;

@implementation GHKStringUtils_ToString

+ (void)initialize {
  if (self == [GHKStringUtils_ToString class]) {
    JreStrongAssignAndConsume(&GHKStringUtils_ToString_DEFAULT, new_GHKStringUtils_ToString_1_init());
    J2OBJC_SET_INITIALIZED(GHKStringUtils_ToString)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GHKStringUtils_ToString)

@implementation GHKStringUtils_ToString_1

- (NSString *)toStringWithId:(NSString *)o {
  return o;
}

@end

void GHKStringUtils_ToString_1_init(GHKStringUtils_ToString_1 *self) {
  NSObject_init(self);
}

GHKStringUtils_ToString_1 *new_GHKStringUtils_ToString_1_init() {
  J2OBJC_NEW_IMPL(GHKStringUtils_ToString_1, init)
}

GHKStringUtils_ToString_1 *create_GHKStringUtils_ToString_1_init() {
  J2OBJC_CREATE_IMPL(GHKStringUtils_ToString_1, init)
}

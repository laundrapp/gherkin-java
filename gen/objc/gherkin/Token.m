//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/Token.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "gherkin/GherkinDialect.h"
#include "gherkin/IGherkinLine.h"
#include "gherkin/Parser.h"
#include "gherkin/Token.h"
#include "gherkin/ast/Location.h"
#include "java/util/List.h"

@implementation GHKToken

- (instancetype __nonnull)initWithGHKIGherkinLine:(id<GHKIGherkinLine>)line
                                 withGHKALocation:(GHKALocation *)location {
  GHKToken_initWithGHKIGherkinLine_withGHKALocation_(self, line, location);
  return self;
}

- (jboolean)isEOF {
  return line_ == nil;
}

- (void)detach {
  if (line_ != nil) [line_ detach];
}

- (NSString *)getTokenValue {
  return [self isEOF] ? @"EOF" : [((id<GHKIGherkinLine>) nil_chk(line_)) getLineTextWithInt:-1];
}

- (NSString *)description {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"%s: %s/%s", [IOSObjectArray arrayWithObjects:(id[]){ matchedType_, matchedKeyword_, matchedText_ } count:3 type:NSObject_class_()]);
}

- (void)dealloc {
  RELEASE_(line_);
  RELEASE_(matchedType_);
  RELEASE_(matchedKeyword_);
  RELEASE_(matchedText_);
  RELEASE_(mathcedItems_);
  RELEASE_(matchedGherkinDialect_);
  RELEASE_(location_);
  [super dealloc];
}

@end

void GHKToken_initWithGHKIGherkinLine_withGHKALocation_(GHKToken *self, id<GHKIGherkinLine> line, GHKALocation *location) {
  NSObject_init(self);
  JreStrongAssign(&self->line_, line);
  JreStrongAssign(&self->location_, location);
}

GHKToken *new_GHKToken_initWithGHKIGherkinLine_withGHKALocation_(id<GHKIGherkinLine> line, GHKALocation *location) {
  J2OBJC_NEW_IMPL(GHKToken, initWithGHKIGherkinLine_withGHKALocation_, line, location)
}

GHKToken *create_GHKToken_initWithGHKIGherkinLine_withGHKALocation_(id<GHKIGherkinLine> line, GHKALocation *location) {
  J2OBJC_CREATE_IMPL(GHKToken, initWithGHKIGherkinLine_withGHKALocation_, line, location)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKToken)

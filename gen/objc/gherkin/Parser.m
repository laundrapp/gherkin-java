//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/Parser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "gherkin/Func.h"
#include "gherkin/Parser.h"
#include "gherkin/ParserException.h"
#include "gherkin/Token.h"
#include "gherkin/TokenMatcher.h"
#include "gherkin/TokenScanner.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Void.h"
#include "java/util/ArrayDeque.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Queue.h"

@interface GHKParser () {
 @public
  id<GHKParser_Builder> builder_;
}

@end

J2OBJC_FIELD_SETTER(GHKParser, builder_, id<GHKParser_Builder>)

__attribute__((unused)) static void GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(GHKParser *self, GHKParser_ParserContext *context, GHKParserException *error);

__attribute__((unused)) static id GHKParser_handleAstErrorWithGHKParser_ParserContext_withGHKFunc_(GHKParser *self, GHKParser_ParserContext *context, id<GHKFunc> action);

__attribute__((unused)) static id GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(GHKParser *self, GHKParser_ParserContext *context, id<GHKFunc> action, id defaultValue);

__attribute__((unused)) static void GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static void GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(GHKParser *self, GHKParser_ParserContext *context, GHKParser_RuleType *ruleType);

__attribute__((unused)) static void GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(GHKParser *self, GHKParser_ParserContext *context, GHKParser_RuleType *ruleType);

__attribute__((unused)) static GHKToken *GHKParser_readTokenWithGHKParser_ParserContext_(GHKParser *self, GHKParser_ParserContext *context);

__attribute__((unused)) static jboolean GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_FeatureLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_BackgroundLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_LanguageWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jboolean GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token);

__attribute__((unused)) static jint GHKParser_matchTokenWithInt_withGHKToken_withGHKParser_ParserContext_(GHKParser *self, jint state, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_0WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_1WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_2WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_3WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_4WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_5WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_6WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_7WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_8WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_9WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_10WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_11WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_12WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_13WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_14WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_15WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_16WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_17WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_18WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_19WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_20WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_21WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_22WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_23WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_24WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_25WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_26WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_28WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_29WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_30WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_31WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_32WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jint GHKParser_matchTokenAt_33WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context);

__attribute__((unused)) static jboolean GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *currentToken);

__attribute__((unused)) static void GHKParser_TokenType_initWithNSString_withInt_(GHKParser_TokenType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void GHKParser_RuleType_initWithNSString_withInt_(GHKParser_RuleType *self, NSString *__name, jint __ordinal);

@interface GHKParser_1 : NSObject < GHKFunc > {
 @public
  GHKParser *this$0_;
  GHKToken *val$token_;
}

- (JavaLangVoid *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_1)

__attribute__((unused)) static void GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser_1 *self, GHKParser *outer$, GHKToken *capture$0);

__attribute__((unused)) static GHKParser_1 *new_GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser *outer$, GHKToken *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_1 *create_GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser *outer$, GHKToken *capture$0);

@interface GHKParser_2 : NSObject < GHKFunc > {
 @public
  GHKParser *this$0_;
  GHKParser_RuleType *val$ruleType_;
}

- (JavaLangVoid *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_2)

__attribute__((unused)) static void GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser_2 *self, GHKParser *outer$, GHKParser_RuleType *capture$0);

__attribute__((unused)) static GHKParser_2 *new_GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_2 *create_GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0);

@interface GHKParser_3 : NSObject < GHKFunc > {
 @public
  GHKParser *this$0_;
  GHKParser_RuleType *val$ruleType_;
}

- (JavaLangVoid *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_3)

__attribute__((unused)) static void GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser_3 *self, GHKParser *outer$, GHKParser_RuleType *capture$0);

__attribute__((unused)) static GHKParser_3 *new_GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_3 *create_GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0);

@interface GHKParser_4 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_4)

__attribute__((unused)) static void GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_4 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_4 *new_GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_4 *create_GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_5 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_5)

__attribute__((unused)) static void GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_5 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_5 *new_GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_5 *create_GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_6 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_6)

__attribute__((unused)) static void GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_6 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_6 *new_GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_6 *create_GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_7 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_7)

__attribute__((unused)) static void GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_7 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_7 *new_GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_7 *create_GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_8 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_8)

__attribute__((unused)) static void GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_8 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_8 *new_GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_8 *create_GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_9 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_9)

__attribute__((unused)) static void GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_9 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_9 *new_GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_9 *create_GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_10 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_10)

__attribute__((unused)) static void GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_10 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_10 *new_GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_10 *create_GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_11 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_11)

__attribute__((unused)) static void GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_11 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_11 *new_GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_11 *create_GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_12 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_12)

__attribute__((unused)) static void GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_12 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_12 *new_GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_12 *create_GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_13 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_13)

__attribute__((unused)) static void GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_13 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_13 *new_GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_13 *create_GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_14 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_14)

__attribute__((unused)) static void GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_14 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_14 *new_GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_14 *create_GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_15 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_15)

__attribute__((unused)) static void GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_15 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_15 *new_GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_15 *create_GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_16 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_16)

__attribute__((unused)) static void GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_16 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_16 *new_GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_16 *create_GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@interface GHKParser_17 : NSObject < GHKFunc > {
 @public
  GHKParser_ParserContext *val$context_;
  GHKToken *val$token_;
}

- (JavaLangBoolean *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(GHKParser_17)

__attribute__((unused)) static void GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_17 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1);

__attribute__((unused)) static GHKParser_17 *new_GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GHKParser_17 *create_GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1);

@implementation GHKParser

- (instancetype __nonnull)initWithGHKParser_Builder:(id<GHKParser_Builder>)builder {
  GHKParser_initWithGHKParser_Builder_(self, builder);
  return self;
}

- (id)parseWithNSString:(NSString *)source {
  return [self parseWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(source)];
}

- (id)parseWithJavaIoReader:(JavaIoReader *)source {
  return [self parseWithGHKParser_ITokenScanner:create_GHKTokenScanner_initWithJavaIoReader_(source)];
}

- (id)parseWithGHKParser_ITokenScanner:(id<GHKParser_ITokenScanner>)tokenScanner {
  return [self parseWithGHKParser_ITokenScanner:tokenScanner withGHKParser_ITokenMatcher:create_GHKTokenMatcher_init()];
}

- (id)parseWithNSString:(NSString *)source
withGHKParser_ITokenMatcher:(id<GHKParser_ITokenMatcher>)tokenMatcher {
  return [self parseWithJavaIoReader:create_JavaIoStringReader_initWithNSString_(source) withGHKParser_ITokenMatcher:tokenMatcher];
}

- (id)parseWithJavaIoReader:(JavaIoReader *)source
withGHKParser_ITokenMatcher:(id<GHKParser_ITokenMatcher>)tokenMatcher {
  return [self parseWithGHKParser_ITokenScanner:create_GHKTokenScanner_initWithJavaIoReader_(source) withGHKParser_ITokenMatcher:tokenMatcher];
}

- (id)parseWithGHKParser_ITokenScanner:(id<GHKParser_ITokenScanner>)tokenScanner
           withGHKParser_ITokenMatcher:(id<GHKParser_ITokenMatcher>)tokenMatcher {
  [((id<GHKParser_Builder>) nil_chk(builder_)) reset];
  [((id<GHKParser_ITokenMatcher>) nil_chk(tokenMatcher)) reset];
  GHKParser_ParserContext *context = create_GHKParser_ParserContext_initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_(self, tokenScanner, tokenMatcher, create_JavaUtilLinkedList_init(), create_JavaUtilArrayList_init());
  GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, GherkinDocument));
  jint state = 0;
  GHKToken *token;
  do {
    token = GHKParser_readTokenWithGHKParser_ParserContext_(self, context);
    state = GHKParser_matchTokenWithInt_withGHKToken_withGHKParser_ParserContext_(self, state, token, context);
  }
  while (![((GHKToken *) nil_chk(token)) isEOF]);
  GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, GherkinDocument));
  if ([((id<JavaUtilList>) nil_chk(context->errors_)) size] > 0) {
    @throw create_GHKParserException_CompositeParserException_initWithJavaUtilList_(context->errors_);
  }
  return [builder_ getResult];
}

- (void)dealloc {
  RELEASE_(builder_);
  [super dealloc];
}

@end

void GHKParser_initWithGHKParser_Builder_(GHKParser *self, id<GHKParser_Builder> builder) {
  NSObject_init(self);
  JreStrongAssign(&self->builder_, builder);
}

GHKParser *new_GHKParser_initWithGHKParser_Builder_(id<GHKParser_Builder> builder) {
  J2OBJC_NEW_IMPL(GHKParser, initWithGHKParser_Builder_, builder)
}

GHKParser *create_GHKParser_initWithGHKParser_Builder_(id<GHKParser_Builder> builder) {
  J2OBJC_CREATE_IMPL(GHKParser, initWithGHKParser_Builder_, builder)
}

void GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(GHKParser *self, GHKParser_ParserContext *context, GHKParserException *error) {
  [((id<JavaUtilList>) nil_chk(((GHKParser_ParserContext *) nil_chk(context))->errors_)) addWithId:error];
  if ([context->errors_ size] > 10) @throw create_GHKParserException_CompositeParserException_initWithJavaUtilList_(context->errors_);
}

id GHKParser_handleAstErrorWithGHKParser_ParserContext_withGHKFunc_(GHKParser *self, GHKParser_ParserContext *context, id<GHKFunc> action) {
  return GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, action, nil);
}

id GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(GHKParser *self, GHKParser_ParserContext *context, id<GHKFunc> action, id defaultValue) {
  if (self->stopAtFirstError_) {
    return [((id<GHKFunc>) nil_chk(action)) call];
  }
  @try {
    return [((id<GHKFunc>) nil_chk(action)) call];
  }
  @catch (GHKParserException_CompositeParserException *compositeParserException) {
    for (GHKParserException * __strong error in nil_chk(compositeParserException->errors_)) {
      GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
    }
  }
  @catch (GHKParserException *error) {
    GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  }
  return defaultValue;
}

void GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  GHKParser_handleAstErrorWithGHKParser_ParserContext_withGHKFunc_(self, context, create_GHKParser_1_initWithGHKParser_withGHKToken_(self, token));
}

void GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(GHKParser *self, GHKParser_ParserContext *context, GHKParser_RuleType *ruleType) {
  GHKParser_handleAstErrorWithGHKParser_ParserContext_withGHKFunc_(self, context, create_GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(self, ruleType));
}

void GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(GHKParser *self, GHKParser_ParserContext *context, GHKParser_RuleType *ruleType) {
  GHKParser_handleAstErrorWithGHKParser_ParserContext_withGHKFunc_(self, context, create_GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(self, ruleType));
}

GHKToken *GHKParser_readTokenWithGHKParser_ParserContext_(GHKParser *self, GHKParser_ParserContext *context) {
  return [((id<JavaUtilQueue>) nil_chk(((GHKParser_ParserContext *) nil_chk(context))->tokenQueue_)) size] > 0 ? [context->tokenQueue_ remove] : [((id<GHKParser_ITokenScanner>) nil_chk(context->tokenScanner_)) read];
}

jboolean GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_FeatureLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_BackgroundLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_LanguageWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jboolean GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *token) {
  if ([((GHKToken *) nil_chk(token)) isEOF]) return false;
  return [((JavaLangBoolean *) nil_chk(GHKParser_handleExternalErrorWithGHKParser_ParserContext_withGHKFunc_withId_(self, context, create_GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(context, token), JavaLangBoolean_valueOfWithBoolean_(false)))) booleanValue];
}

jint GHKParser_matchTokenWithInt_withGHKToken_withGHKParser_ParserContext_(GHKParser *self, jint state, GHKToken *token, GHKParser_ParserContext *context) {
  jint newState;
  switch (state) {
    case 0:
    newState = GHKParser_matchTokenAt_0WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 1:
    newState = GHKParser_matchTokenAt_1WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 2:
    newState = GHKParser_matchTokenAt_2WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 3:
    newState = GHKParser_matchTokenAt_3WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 4:
    newState = GHKParser_matchTokenAt_4WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 5:
    newState = GHKParser_matchTokenAt_5WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 6:
    newState = GHKParser_matchTokenAt_6WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 7:
    newState = GHKParser_matchTokenAt_7WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 8:
    newState = GHKParser_matchTokenAt_8WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 9:
    newState = GHKParser_matchTokenAt_9WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 10:
    newState = GHKParser_matchTokenAt_10WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 11:
    newState = GHKParser_matchTokenAt_11WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 12:
    newState = GHKParser_matchTokenAt_12WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 13:
    newState = GHKParser_matchTokenAt_13WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 14:
    newState = GHKParser_matchTokenAt_14WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 15:
    newState = GHKParser_matchTokenAt_15WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 16:
    newState = GHKParser_matchTokenAt_16WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 17:
    newState = GHKParser_matchTokenAt_17WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 18:
    newState = GHKParser_matchTokenAt_18WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 19:
    newState = GHKParser_matchTokenAt_19WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 20:
    newState = GHKParser_matchTokenAt_20WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 21:
    newState = GHKParser_matchTokenAt_21WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 22:
    newState = GHKParser_matchTokenAt_22WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 23:
    newState = GHKParser_matchTokenAt_23WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 24:
    newState = GHKParser_matchTokenAt_24WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 25:
    newState = GHKParser_matchTokenAt_25WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 26:
    newState = GHKParser_matchTokenAt_26WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 28:
    newState = GHKParser_matchTokenAt_28WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 29:
    newState = GHKParser_matchTokenAt_29WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 30:
    newState = GHKParser_matchTokenAt_30WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 31:
    newState = GHKParser_matchTokenAt_31WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 32:
    newState = GHKParser_matchTokenAt_32WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    case 33:
    newState = GHKParser_matchTokenAt_33WithGHKToken_withGHKParser_ParserContext_(self, token, context);
    break;
    default:
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"Unknown state: ", state));
  }
  return newState;
}

jint GHKParser_matchTokenAt_0WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_LanguageWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 1;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 2;
  }
  if (GHKParser_match_FeatureLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 3;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 0;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 0;
  }
  NSString *stateComment = @"State: 0 - Start";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Language", @"#TagLine", @"#FeatureLine", @"#Comment", @"#Empty" } count:6 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 0;
}

jint GHKParser_matchTokenAt_1WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 2;
  }
  if (GHKParser_match_FeatureLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 3;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 1;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 1;
  }
  NSString *stateComment = @"State: 1 - GherkinDocument:0>Feature:0>Feature_Header:0>#Language:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#TagLine", @"#FeatureLine", @"#Comment", @"#Empty" } count:4 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 1;
}

jint GHKParser_matchTokenAt_2WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 2;
  }
  if (GHKParser_match_FeatureLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 3;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 2;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 2;
  }
  NSString *stateComment = @"State: 2 - GherkinDocument:0>Feature:0>Feature_Header:1>Tags:0>#TagLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#TagLine", @"#FeatureLine", @"#Comment", @"#Empty" } count:4 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 2;
}

jint GHKParser_matchTokenAt_3WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 3;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 5;
  }
  if (GHKParser_match_BackgroundLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 6;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 4;
  }
  NSString *stateComment = @"State: 3 - GherkinDocument:0>Feature:0>Feature_Header:2>#FeatureLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Empty", @"#Comment", @"#BackgroundLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 3;
}

jint GHKParser_matchTokenAt_4WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 5;
  }
  if (GHKParser_match_BackgroundLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 6;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 4;
  }
  NSString *stateComment = @"State: 4 - GherkinDocument:0>Feature:0>Feature_Header:3>Description_Helper:1>Description:0>#Other:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#BackgroundLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 4;
}

jint GHKParser_matchTokenAt_5WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 5;
  }
  if (GHKParser_match_BackgroundLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 6;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature_Header));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 5;
  }
  NSString *stateComment = @"State: 5 - GherkinDocument:0>Feature:0>Feature_Header:3>Description_Helper:2>#Comment:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#BackgroundLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Empty" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 5;
}

jint GHKParser_matchTokenAt_6WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 6;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 8;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 7;
  }
  NSString *stateComment = @"State: 6 - GherkinDocument:0>Feature:1>Background:0>#BackgroundLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Empty", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 6;
}

jint GHKParser_matchTokenAt_7WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 8;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 7;
  }
  NSString *stateComment = @"State: 7 - GherkinDocument:0>Feature:1>Background:1>Description_Helper:1>Description:0>#Other:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 7;
}

jint GHKParser_matchTokenAt_8WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 8;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 8;
  }
  NSString *stateComment = @"State: 8 - GherkinDocument:0>Feature:1>Background:1>Description_Helper:2>#Comment:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Empty" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 8;
}

jint GHKParser_matchTokenAt_9WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 10;
  }
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 32;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  NSString *stateComment = @"State: 9 - GherkinDocument:0>Feature:1>Background:2>Step:0>#StepLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#DocStringSeparator", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:9 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 9;
}

jint GHKParser_matchTokenAt_10WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 10;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 10;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 10;
  }
  NSString *stateComment = @"State: 10 - GherkinDocument:0>Feature:1>Background:2>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 10;
}

jint GHKParser_matchTokenAt_11WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  NSString *stateComment = @"State: 11 - GherkinDocument:0>Feature:2>Scenario_Definition:0>Tags:0>#TagLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:5 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 11;
}

jint GHKParser_matchTokenAt_12WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 14;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 13;
  }
  NSString *stateComment = @"State: 12 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:0>#ScenarioLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Empty", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 12;
}

jint GHKParser_matchTokenAt_13WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 14;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 13;
  }
  NSString *stateComment = @"State: 13 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Description_Helper:1>Description:0>#Other:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 13;
}

jint GHKParser_matchTokenAt_14WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 14;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 14;
  }
  NSString *stateComment = @"State: 14 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Description_Helper:2>#Comment:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Empty" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 14;
}

jint GHKParser_matchTokenAt_15WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 16;
  }
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 30;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  NSString *stateComment = @"State: 15 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Step:0>#StepLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#DocStringSeparator", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:9 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 15;
}

jint GHKParser_matchTokenAt_16WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 16;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 16;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 16;
  }
  NSString *stateComment = @"State: 16 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 16;
}

jint GHKParser_matchTokenAt_17WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 19;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 18;
  }
  NSString *stateComment = @"State: 17 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:0>#ScenarioOutlineLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Empty", @"#Comment", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:9 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 17;
}

jint GHKParser_matchTokenAt_18WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 19;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 18;
  }
  NSString *stateComment = @"State: 18 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>Description_Helper:1>Description:0>#Other:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 18;
}

jint GHKParser_matchTokenAt_19WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 19;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 19;
  }
  NSString *stateComment = @"State: 19 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>Description_Helper:2>#Comment:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 19;
}

jint GHKParser_matchTokenAt_20WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 21;
  }
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 28;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  NSString *stateComment = @"State: 20 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>Step:0>#StepLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#DocStringSeparator", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:10 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 20;
}

jint GHKParser_matchTokenAt_21WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 21;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DataTable));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 21;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 21;
  }
  NSString *stateComment = @"State: 21 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:9 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 21;
}

jint GHKParser_matchTokenAt_22WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 22;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 22;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 22;
  }
  NSString *stateComment = @"State: 22 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:0>Tags:0>#TagLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#TagLine", @"#ExamplesLine", @"#Comment", @"#Empty" } count:4 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 22;
}

jint GHKParser_matchTokenAt_23WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 25;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 24;
  }
  NSString *stateComment = @"State: 23 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:0>#ExamplesLine:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Empty", @"#Comment", @"#TableRow", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:9 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 23;
}

jint GHKParser_matchTokenAt_24WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 25;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Description));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 24;
  }
  NSString *stateComment = @"State: 24 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Description_Helper:1>Description:0>#Other:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#TableRow", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Other" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 24;
}

jint GHKParser_matchTokenAt_25WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 25;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 25;
  }
  NSString *stateComment = @"State: 25 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Description_Helper:2>#Comment:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#Comment", @"#TableRow", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 25;
}

jint GHKParser_matchTokenAt_26WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_TableRowWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Table));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 26;
  }
  NSString *stateComment = @"State: 26 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:2>Examples_Table:0>#TableRow:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#TableRow", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 26;
}

jint GHKParser_matchTokenAt_28WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 29;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 28;
  }
  NSString *stateComment = @"State: 28 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#DocStringSeparator", @"#Other" } count:2 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 28;
}

jint GHKParser_matchTokenAt_29WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 20;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    if (GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
      GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
      GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
      GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
      return 22;
    }
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Examples));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 23;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 29;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 29;
  }
  NSString *stateComment = @"State: 29 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#StepLine", @"#TagLine", @"#ExamplesLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:8 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 29;
}

jint GHKParser_matchTokenAt_30WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 31;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 30;
  }
  NSString *stateComment = @"State: 30 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#DocStringSeparator", @"#Other" } count:2 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 30;
}

jint GHKParser_matchTokenAt_31WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 15;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 31;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 31;
  }
  NSString *stateComment = @"State: 31 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 31;
}

jint GHKParser_matchTokenAt_32WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_DocStringSeparatorWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 33;
  }
  if (GHKParser_match_OtherWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 32;
  }
  NSString *stateComment = @"State: 32 - GherkinDocument:0>Feature:1>Background:2>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#DocStringSeparator", @"#Other" } count:2 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 32;
}

jint GHKParser_matchTokenAt_33WithGHKToken_withGHKParser_ParserContext_(GHKParser *self, GHKToken *token, GHKParser_ParserContext *context) {
  if (GHKParser_match_EOFWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Feature));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 27;
  }
  if (GHKParser_match_StepLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 9;
  }
  if (GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Tags));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 11;
  }
  if (GHKParser_match_ScenarioLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 12;
  }
  if (GHKParser_match_ScenarioOutlineLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, DocString));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Step));
    GHKParser_endRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Background));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, Scenario_Definition));
    GHKParser_startRuleWithGHKParser_ParserContext_withGHKParser_RuleType_(self, context, JreLoadEnum(GHKParser_RuleType, ScenarioOutline));
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 17;
  }
  if (GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 33;
  }
  if (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
    GHKParser_buildWithGHKParser_ParserContext_withGHKToken_(self, context, token);
    return 33;
  }
  NSString *stateComment = @"State: 33 - GherkinDocument:0>Feature:1>Background:2>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
  [((GHKToken *) nil_chk(token)) detach];
  id<JavaUtilList> expectedTokens = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"#EOF", @"#StepLine", @"#TagLine", @"#ScenarioLine", @"#ScenarioOutlineLine", @"#Comment", @"#Empty" } count:7 type:NSString_class_()]);
  GHKParserException *error = [token isEOF] ? create_GHKParserException_UnexpectedEOFException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment) : (id) create_GHKParserException_UnexpectedTokenException_initWithGHKToken_withJavaUtilList_withNSString_(token, expectedTokens, stateComment);
  if (self->stopAtFirstError_) @throw error;
  GHKParser_addErrorWithGHKParser_ParserContext_withGHKParserException_(self, context, error);
  return 33;
}

jboolean GHKParser_lookahead_0WithGHKParser_ParserContext_withGHKToken_(GHKParser *self, GHKParser_ParserContext *context, GHKToken *currentToken) {
  [((GHKToken *) nil_chk(currentToken)) detach];
  GHKToken *token;
  id<JavaUtilQueue> queue = create_JavaUtilArrayDeque_init();
  jboolean match = false;
  do {
    token = GHKParser_readTokenWithGHKParser_ParserContext_(self, context);
    [((GHKToken *) nil_chk(token)) detach];
    [queue addWithId:token];
    if (GHKParser_match_ExamplesLineWithGHKParser_ParserContext_withGHKToken_(self, context, token)) {
      match = true;
      break;
    }
  }
  while (GHKParser_match_EmptyWithGHKParser_ParserContext_withGHKToken_(self, context, token) || GHKParser_match_CommentWithGHKParser_ParserContext_withGHKToken_(self, context, token) || GHKParser_match_TagLineWithGHKParser_ParserContext_withGHKToken_(self, context, token));
  [((id<JavaUtilQueue>) nil_chk(((GHKParser_ParserContext *) nil_chk(context))->tokenQueue_)) addAllWithJavaUtilCollection:queue];
  return match;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKParser)

J2OBJC_INITIALIZED_DEFN(GHKParser_TokenType)

GHKParser_TokenType *GHKParser_TokenType_values_[15];

@implementation GHKParser_TokenType

+ (IOSObjectArray *)values {
  return GHKParser_TokenType_values();
}

+ (GHKParser_TokenType *)valueOfWithNSString:(NSString *)name {
  return GHKParser_TokenType_valueOfWithNSString_(name);
}

+ (void)initialize {
  if (self == [GHKParser_TokenType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 15 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"None", @"EOF", @"Empty", @"Comment", @"TagLine", @"FeatureLine", @"BackgroundLine", @"ScenarioLine", @"ScenarioOutlineLine", @"ExamplesLine", @"StepLine", @"DocStringSeparator", @"TableRow", @"Language", @"Other",
    };
    for (jint i = 0; i < 15; i++) {
      ((void)(GHKParser_TokenType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      GHKParser_TokenType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(GHKParser_TokenType)
  }
}

@end

void GHKParser_TokenType_initWithNSString_withInt_(GHKParser_TokenType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *GHKParser_TokenType_values() {
  GHKParser_TokenType_initialize();
  return [IOSObjectArray arrayWithObjects:GHKParser_TokenType_values_ count:15 type:GHKParser_TokenType_class_()];
}

GHKParser_TokenType *GHKParser_TokenType_valueOfWithNSString_(NSString *name) {
  GHKParser_TokenType_initialize();
  for (int i = 0; i < 15; i++) {
    GHKParser_TokenType *e = GHKParser_TokenType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

GHKParser_TokenType *GHKParser_TokenType_fromOrdinal(NSUInteger ordinal) {
  GHKParser_TokenType_initialize();
  if (ordinal >= 15) {
    return nil;
  }
  return GHKParser_TokenType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKParser_TokenType)

J2OBJC_INITIALIZED_DEFN(GHKParser_RuleType)

GHKParser_RuleType *GHKParser_RuleType_values_[32];

@implementation GHKParser_RuleType

+ (GHKParser_RuleType *)castWithGHKParser_TokenType:(GHKParser_TokenType *)tokenType {
  return GHKParser_RuleType_castWithGHKParser_TokenType_(tokenType);
}

+ (IOSObjectArray *)values {
  return GHKParser_RuleType_values();
}

+ (GHKParser_RuleType *)valueOfWithNSString:(NSString *)name {
  return GHKParser_RuleType_valueOfWithNSString_(name);
}

+ (void)initialize {
  if (self == [GHKParser_RuleType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 32 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"None", @"_EOF", @"_Empty", @"_Comment", @"_TagLine", @"_FeatureLine", @"_BackgroundLine", @"_ScenarioLine", @"_ScenarioOutlineLine", @"_ExamplesLine", @"_StepLine", @"_DocStringSeparator", @"_TableRow", @"_Language", @"_Other", @"GherkinDocument", @"Feature", @"Feature_Header", @"Background", @"Scenario_Definition", @"Scenario", @"ScenarioOutline", @"Examples_Definition", @"Examples", @"Examples_Table", @"Step", @"Step_Arg", @"DataTable", @"DocString", @"Tags", @"Description_Helper", @"Description",
    };
    for (jint i = 0; i < 32; i++) {
      ((void)(GHKParser_RuleType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      GHKParser_RuleType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(GHKParser_RuleType)
  }
}

@end

void GHKParser_RuleType_initWithNSString_withInt_(GHKParser_RuleType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GHKParser_RuleType *GHKParser_RuleType_castWithGHKParser_TokenType_(GHKParser_TokenType *tokenType) {
  GHKParser_RuleType_initialize();
  return IOSObjectArray_Get(nil_chk(GHKParser_RuleType_values()), [((GHKParser_TokenType *) nil_chk(tokenType)) ordinal]);
}

IOSObjectArray *GHKParser_RuleType_values() {
  GHKParser_RuleType_initialize();
  return [IOSObjectArray arrayWithObjects:GHKParser_RuleType_values_ count:32 type:GHKParser_RuleType_class_()];
}

GHKParser_RuleType *GHKParser_RuleType_valueOfWithNSString_(NSString *name) {
  GHKParser_RuleType_initialize();
  for (int i = 0; i < 32; i++) {
    GHKParser_RuleType *e = GHKParser_RuleType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

GHKParser_RuleType *GHKParser_RuleType_fromOrdinal(NSUInteger ordinal) {
  GHKParser_RuleType_initialize();
  if (ordinal >= 32) {
    return nil;
  }
  return GHKParser_RuleType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKParser_RuleType)

@implementation GHKParser_ParserContext

- (instancetype __nonnull)initWithGHKParser:(GHKParser *)outer$
                withGHKParser_ITokenScanner:(id<GHKParser_ITokenScanner>)tokenScanner
                withGHKParser_ITokenMatcher:(id<GHKParser_ITokenMatcher>)tokenMatcher
                          withJavaUtilQueue:(id<JavaUtilQueue>)tokenQueue
                           withJavaUtilList:(id<JavaUtilList>)errors {
  GHKParser_ParserContext_initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_(self, outer$, tokenScanner, tokenMatcher, tokenQueue, errors);
  return self;
}

- (void)dealloc {
  RELEASE_(tokenScanner_);
  RELEASE_(tokenMatcher_);
  RELEASE_(tokenQueue_);
  RELEASE_(errors_);
  [super dealloc];
}

@end

void GHKParser_ParserContext_initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_(GHKParser_ParserContext *self, GHKParser *outer$, id<GHKParser_ITokenScanner> tokenScanner, id<GHKParser_ITokenMatcher> tokenMatcher, id<JavaUtilQueue> tokenQueue, id<JavaUtilList> errors) {
  NSObject_init(self);
  JreStrongAssign(&self->tokenScanner_, tokenScanner);
  JreStrongAssign(&self->tokenMatcher_, tokenMatcher);
  JreStrongAssign(&self->tokenQueue_, tokenQueue);
  JreStrongAssign(&self->errors_, errors);
}

GHKParser_ParserContext *new_GHKParser_ParserContext_initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_(GHKParser *outer$, id<GHKParser_ITokenScanner> tokenScanner, id<GHKParser_ITokenMatcher> tokenMatcher, id<JavaUtilQueue> tokenQueue, id<JavaUtilList> errors) {
  J2OBJC_NEW_IMPL(GHKParser_ParserContext, initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_, outer$, tokenScanner, tokenMatcher, tokenQueue, errors)
}

GHKParser_ParserContext *create_GHKParser_ParserContext_initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_(GHKParser *outer$, id<GHKParser_ITokenScanner> tokenScanner, id<GHKParser_ITokenMatcher> tokenMatcher, id<JavaUtilQueue> tokenQueue, id<JavaUtilList> errors) {
  J2OBJC_CREATE_IMPL(GHKParser_ParserContext, initWithGHKParser_withGHKParser_ITokenScanner_withGHKParser_ITokenMatcher_withJavaUtilQueue_withJavaUtilList_, outer$, tokenScanner, tokenMatcher, tokenQueue, errors)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKParser_ParserContext)

@implementation GHKParser_1

- (JavaLangVoid *)call {
  [((id<GHKParser_Builder>) nil_chk(this$0_->builder_)) buildWithGHKToken:val$token_];
  return nil;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser_1 *self, GHKParser *outer$, GHKToken *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$token_, capture$0);
  NSObject_init(self);
}

GHKParser_1 *new_GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser *outer$, GHKToken *capture$0) {
  J2OBJC_NEW_IMPL(GHKParser_1, initWithGHKParser_withGHKToken_, outer$, capture$0)
}

GHKParser_1 *create_GHKParser_1_initWithGHKParser_withGHKToken_(GHKParser *outer$, GHKToken *capture$0) {
  J2OBJC_CREATE_IMPL(GHKParser_1, initWithGHKParser_withGHKToken_, outer$, capture$0)
}

@implementation GHKParser_2

- (JavaLangVoid *)call {
  [((id<GHKParser_Builder>) nil_chk(this$0_->builder_)) startRuleWithGHKParser_RuleType:val$ruleType_];
  return nil;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$ruleType_);
  [super dealloc];
}

@end

void GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser_2 *self, GHKParser *outer$, GHKParser_RuleType *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$ruleType_, capture$0);
  NSObject_init(self);
}

GHKParser_2 *new_GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) {
  J2OBJC_NEW_IMPL(GHKParser_2, initWithGHKParser_withGHKParser_RuleType_, outer$, capture$0)
}

GHKParser_2 *create_GHKParser_2_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) {
  J2OBJC_CREATE_IMPL(GHKParser_2, initWithGHKParser_withGHKParser_RuleType_, outer$, capture$0)
}

@implementation GHKParser_3

- (JavaLangVoid *)call {
  [((id<GHKParser_Builder>) nil_chk(this$0_->builder_)) endRuleWithGHKParser_RuleType:val$ruleType_];
  return nil;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$ruleType_);
  [super dealloc];
}

@end

void GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser_3 *self, GHKParser *outer$, GHKParser_RuleType *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$ruleType_, capture$0);
  NSObject_init(self);
}

GHKParser_3 *new_GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) {
  J2OBJC_NEW_IMPL(GHKParser_3, initWithGHKParser_withGHKParser_RuleType_, outer$, capture$0)
}

GHKParser_3 *create_GHKParser_3_initWithGHKParser_withGHKParser_RuleType_(GHKParser *outer$, GHKParser_RuleType *capture$0) {
  J2OBJC_CREATE_IMPL(GHKParser_3, initWithGHKParser_withGHKParser_RuleType_, outer$, capture$0)
}

@implementation GHKParser_4

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_EOFWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_4 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_4 *new_GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_4, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_4 *create_GHKParser_4_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_4, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_5

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_EmptyWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_5 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_5 *new_GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_5, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_5 *create_GHKParser_5_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_5, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_6

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_CommentWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_6 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_6 *new_GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_6, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_6 *create_GHKParser_6_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_6, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_7

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_TagLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_7 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_7 *new_GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_7, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_7 *create_GHKParser_7_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_7, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_8

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_FeatureLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_8 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_8 *new_GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_8, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_8 *create_GHKParser_8_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_8, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_9

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_BackgroundLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_9 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_9 *new_GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_9, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_9 *create_GHKParser_9_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_9, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_10

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_ScenarioLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_10 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_10 *new_GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_10, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_10 *create_GHKParser_10_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_10, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_11

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_ScenarioOutlineLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_11 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_11 *new_GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_11, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_11 *create_GHKParser_11_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_11, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_12

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_ExamplesLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_12 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_12 *new_GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_12, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_12 *create_GHKParser_12_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_12, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_13

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_StepLineWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_13 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_13 *new_GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_13, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_13 *create_GHKParser_13_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_13, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_14

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_DocStringSeparatorWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_14 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_14 *new_GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_14, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_14 *create_GHKParser_14_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_14, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_15

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_TableRowWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_15 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_15 *new_GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_15, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_15 *create_GHKParser_15_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_15, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_16

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_LanguageWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_16 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_16 *new_GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_16, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_16 *create_GHKParser_16_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_16, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

@implementation GHKParser_17

- (JavaLangBoolean *)call {
  return JavaLangBoolean_valueOfWithBoolean_([((id<GHKParser_ITokenMatcher>) nil_chk(((GHKParser_ParserContext *) nil_chk(val$context_))->tokenMatcher_)) match_OtherWithGHKToken:val$token_]);
}

- (void)dealloc {
  RELEASE_(val$context_);
  RELEASE_(val$token_);
  [super dealloc];
}

@end

void GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_17 *self, GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  JreStrongAssign(&self->val$context_, capture$0);
  JreStrongAssign(&self->val$token_, capture$1);
  NSObject_init(self);
}

GHKParser_17 *new_GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_NEW_IMPL(GHKParser_17, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

GHKParser_17 *create_GHKParser_17_initWithGHKParser_ParserContext_withGHKToken_(GHKParser_ParserContext *capture$0, GHKToken *capture$1) {
  J2OBJC_CREATE_IMPL(GHKParser_17, initWithGHKParser_ParserContext_withGHKToken_, capture$0, capture$1)
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GHKParser_Builder)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GHKParser_ITokenScanner)

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GHKParser_ITokenMatcher)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/gherkin-java/src/main/java/gherkin/GenerateTokens.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "gherkin/GenerateTokens.h"
#include "gherkin/Parser.h"
#include "gherkin/TokenFormatterBuilder.h"
#include "gherkin/TokenMatcher.h"
#include "gherkin/stream/Stdio.h"
#include "java/io/FileInputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintWriter.h"

@implementation GHKGenerateTokens

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  GHKGenerateTokens_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  GHKGenerateTokens_mainWithNSStringArray_(args);
}

@end

void GHKGenerateTokens_init(GHKGenerateTokens *self) {
  NSObject_init(self);
}

GHKGenerateTokens *new_GHKGenerateTokens_init() {
  J2OBJC_NEW_IMPL(GHKGenerateTokens, init)
}

GHKGenerateTokens *create_GHKGenerateTokens_init() {
  J2OBJC_CREATE_IMPL(GHKGenerateTokens, init)
}

void GHKGenerateTokens_mainWithNSStringArray_(IOSObjectArray *args) {
  GHKGenerateTokens_initialize();
  GHKTokenFormatterBuilder *builder = create_GHKTokenFormatterBuilder_init();
  GHKParser *parser = create_GHKParser_initWithGHKParser_Builder_(builder);
  GHKTokenMatcher *matcher = create_GHKTokenMatcher_init();
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *fileName = *b__++;
      JavaIoInputStreamReader *in = create_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(create_JavaIoFileInputStream_initWithNSString_(fileName), @"UTF-8");
      NSString *result = [parser parseWithJavaIoReader:in withGHKParser_ITokenMatcher:matcher];
      [((JavaIoPrintWriter *) nil_chk(JreLoadStatic(GHKStdio, out))) printWithNSString:result];
      [JreLoadStatic(GHKStdio, out) flush];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHKGenerateTokens)

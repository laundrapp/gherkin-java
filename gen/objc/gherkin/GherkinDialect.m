//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gherkin/gherkin-java/src/main/java/gherkin/GherkinDialect.java
//

#include "J2ObjC_source.h"
#include "gherkin/GherkinDialect.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface GherkinGherkinDialect () {
 @public
  id<JavaUtilMap> keywords_;
  NSString *language_;
}

@end

J2OBJC_FIELD_SETTER(GherkinGherkinDialect, keywords_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GherkinGherkinDialect, language_, NSString *)

@implementation GherkinGherkinDialect

- (instancetype __nonnull)initWithNSString:(NSString *)language
                           withJavaUtilMap:(id<JavaUtilMap>)keywords {
  GherkinGherkinDialect_initWithNSString_withJavaUtilMap_(self, language, keywords);
  return self;
}

- (id<JavaUtilList>)getFeatureKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"feature"];
}

- (id<JavaUtilList>)getScenarioKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"scenario"];
}

- (id<JavaUtilList>)getStepKeywords {
  id<JavaUtilList> result = create_JavaUtilArrayList_init();
  [result addAllWithJavaUtilCollection:[self getGivenKeywords]];
  [result addAllWithJavaUtilCollection:[self getWhenKeywords]];
  [result addAllWithJavaUtilCollection:[self getThenKeywords]];
  [result addAllWithJavaUtilCollection:[self getAndKeywords]];
  [result addAllWithJavaUtilCollection:[self getButKeywords]];
  return result;
}

- (id<JavaUtilList>)getBackgroundKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"background"];
}

- (id<JavaUtilList>)getScenarioOutlineKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"scenarioOutline"];
}

- (id<JavaUtilList>)getExamplesKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"examples"];
}

- (id<JavaUtilList>)getGivenKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"given"];
}

- (id<JavaUtilList>)getWhenKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"when"];
}

- (id<JavaUtilList>)getThenKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"then"];
}

- (id<JavaUtilList>)getAndKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"and"];
}

- (id<JavaUtilList>)getButKeywords {
  return [((id<JavaUtilMap>) nil_chk(keywords_)) getWithId:@"but"];
}

- (NSString *)getLanguage {
  return language_;
}

- (void)dealloc {
  RELEASE_(keywords_);
  RELEASE_(language_);
  [super dealloc];
}

@end

void GherkinGherkinDialect_initWithNSString_withJavaUtilMap_(GherkinGherkinDialect *self, NSString *language, id<JavaUtilMap> keywords) {
  NSObject_init(self);
  JreStrongAssign(&self->language_, language);
  JreStrongAssign(&self->keywords_, keywords);
}

GherkinGherkinDialect *new_GherkinGherkinDialect_initWithNSString_withJavaUtilMap_(NSString *language, id<JavaUtilMap> keywords) {
  J2OBJC_NEW_IMPL(GherkinGherkinDialect, initWithNSString_withJavaUtilMap_, language, keywords)
}

GherkinGherkinDialect *create_GherkinGherkinDialect_initWithNSString_withJavaUtilMap_(NSString *language, id<JavaUtilMap> keywords) {
  J2OBJC_CREATE_IMPL(GherkinGherkinDialect, initWithNSString_withJavaUtilMap_, language, keywords)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GherkinGherkinDialect)
